from datetime import datetime
import time
import pandas as pd
import streamlit as st
from PIL import Image
from streamlit_option_menu import option_menu
from nsetools import Nse
import requests
from streamlit_lottie import st_lottie
import csv
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error

def load_lottie(url):
    r = requests.get(url)
    if r.status_code != 200:
        return None
    return r.json()


st.set_page_config(
    page_title="exhale",
    page_icon="dollar",
    layout="wide"
)

st.markdown("""<h1 style="color:#D6C5FF;background-color:#0e1117;font-size:400%;text-align:center;font-family:Didot
;"> <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="#D6C5FF" 
stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-layers"><polygon points="12 2 
2 7 12 12 22 7 12 2"></polygon><polyline points="2 17 12 22 22 17"></polyline><polyline points="2 12 12 17 22 
12"></polyline></svg> exhale</h1>""", unsafe_allow_html=True)

lottie_coding = load_lottie("https://assets8.lottiefiles.com/packages/lf20_i2eyukor.json")
lottie_coding_1 = load_lottie("https://assets3.lottiefiles.com/packages/lf20_rMIWDc0fSB.json")
lottie_coding_2 = load_lottie("https://assets3.lottiefiles.com/packages/lf20_ky2ondsa.json")
lottie_coding_3 = load_lottie("https://assets3.lottiefiles.com/packages/lf20_cohxzcyi.json")
lottie_coding_4 = load_lottie("https://assets7.lottiefiles.com/private_files/lf30_F3v2Nj.json")
lottie_coding_5 = load_lottie("https://assets6.lottiefiles.com/private_files/lf30_t150m0i4.json")
lottie_coding_6 = load_lottie("https://assets9.lottiefiles.com/private_files/lf30_i0cTdc.json")
lottie_coding_7 = load_lottie("https://assets2.lottiefiles.com/packages/lf20_uonpv3qg.json")
lottie_coding_8 = load_lottie("https://assets2.lottiefiles.com/packages/lf20_yMpiqXia1k.json")
selected = option_menu(
    menu_title=None,
    options=["Home", "Investment idea", "IND Stock tracking", "US stocks tracking"],
    icons=["house", "lightbulb", "cash", "coin"],
    orientation='horizontal',
    styles={
        "container": {"padding": "0!important", "background-color": "#262730"},
        "icon": {"color": "#ffffff", "font-size": "25px"},
        "nav-link": {"font-size": "20px", "text-align": "left", "margin": "0px", "--hover-color": "#D6C5FF",
                     "color": "#8662C4"},
        "nav-link-selected": {"background-color": "#D6C5FF"},
    }
)

if selected == "Home":
    st.write("\n\n")
    with st.container():
        c1, c2 = st.columns(2)
        with c2:
            st_lottie(lottie_coding_1, height=300, key="coding")
        with c1:
            st.write("<h2>Stocks", unsafe_allow_html=True)
            st.write("<h3>A stock of a company is essentially a type of financial instrument that offers a\ndegree of "
                     "ownership in the company, as well as a claim on its assets and profits.\nStocks are given out by "
                     "companies at a specific rate per share to interested\ninvestors for a variety of purposes such "
                     "as "
                     "raising capital, funding expansion or paying off the company's debts."
                     "\n"
                     "\n", unsafe_allow_html=True)
    with st.container():
        c1, c2 = st.columns(2)
        with c2:
            st.subheader('KEY TAKEAWAYS')
            st.write(
                "ðŸ“Œ <h5>Investing is the act of committing money or capital to an endeavor with the expectation of "
                "obtaining additional income or profit.", unsafe_allow_html=True)
            st.write("ðŸ“Œ <h5>Unlike consuming, investing puts money to work so it can grow overtime.",
                     unsafe_allow_html=True)
            st.write("ðŸ“Œ <h5>However, investing also comes with the risk of losses.", unsafe_allow_html=True)
            st.write("ðŸ“Œ <h5>The stock market is a common way for investors, no matter their experience, to invest "
                     "for a "
                     "lifetime.", unsafe_allow_html=True)
            st.write(
                "ðŸ“Œ <h5>Beginning investors can get help from expert advisors, leave their portfolio selection and "
                "management to robo-advisors, or take a DIY approach to investing in stocks", unsafe_allow_html=True)
            st.write("****")
        with c1:
            st.markdown("****")
            st_lottie(lottie_coding, height=300, key="streak")
            st.write("*****")
            st.write('''# "In investing, what is comfortable is rarely profitable. - By Robert Arnott "''')
            st.write("\n\n")
            st.write("*****")

    with st.container():
        c1, c2 = st.columns(2)
        with c1:
            st.write("<h2> Do you know about SmallCase???<h2>", unsafe_allow_html=True)
            st.write('<h2> A smallcase is a basket of stocks that reflects an idea</h2>', unsafe_allow_html=True)
            image = Image.open('C:/Users/Admin/Downloads/sm.png')
            st.image(image, width=160, use_column_width=160)
        with c2:
            st.write(
                "<h4>smallcases are a new way to invest in stocks. A smallcase is an intelligently weighted basket of "
                "upto 50 stocks that reflects a theme, idea or strategy. "
                "You can choose a smallcase based on a theme that you are positive on, invest in it in 3 clicks and "
                "track "
                "& manage multiple portfolios seamlessly."
                "smallcases aren't a means of recommending or advising investors. Choosing a smallcase is upto each"
                "individual. "
                "smallcase have features like RE-BALANCING meaning group of stock you added(i.e suggested based on a"
                "particular theme) in your account may be at risk or not performing well."
                "smallcase may ask you to sell some of the stocks to maintain a balance in your portfolio",
                unsafe_allow_html=True)
            st.write("\n\n")
            st.caption("*Click here to know more about* [link](https://www.smallcase.com/)")
        st.write("****")
    st.write(
        '''# "l will tell you how to become rich. Close the doors. Be fearful when others are greedy. Be greedy when others are fearful." â€” By Warren Buffett"''')
if selected == "Investment idea":
    st.subheader('INVESTMENT IDEAS')
    st.caption("!!!DISCLAIMER THE BELOW SUGGESTION ARE BASED ON SOME MATHEMATICAL MODEL FOR PROGRAMMING PURPOSE. WE "
               "ARE NOT INFLUENCING OR WANT YOU TO INVEST. MAKE YOUR OWN RESEARCH BEFORE INVESTING!!!")
    n = st.number_input('enter you salary')
    p = st.number_input('enter the amount you can invest')
    st.write("\n")
    st.write("\n")
    st.subheader("Click the risk factor accordingly â¬‡â¬‡â¬‡")
    c1, c2 = st.columns(2)
    with c1:
        low = st.button('low risk')
        if low:
            st.markdown("<h5>The below mentioned list is an idea to start your investment journey",
                        unsafe_allow_html=True)
            st.success(f"invest {p * .2} in IND stocks")
            st.success(
                f"invest {p * .6} in fixed income(like government bonds,term deposit,fixed deposit,gold Sovereign bonds)")
            st.success(f"invest {p * .2} in mutual funds(comparatively less risk in NIFTY50)")
        medium = st.button('medium risk')
        if medium:
            st.markdown("<h5>The below mentioned list is an idea to start your investment journey",
                        unsafe_allow_html=True)
            st.success(f"invest {p * .3} in IND stocks")
            st.success(
                f"invest {p * .4} in fixed income(like government bonds,term deposit,fixed deposit,gold Sovereign bonds)")
            st.success(f"invest {p * .3} in mutual funds(comparatively less risk in NIFTY50)")
        high = st.button('high risk')
        if high:
            st.markdown("<h5>The below mentioned list is an idea to start your investment journey",
                        unsafe_allow_html=True)
            st.success(f"invest {p * .3} in IND stocks")
            st.success(f"invest {p * .1} in us stocks")
            st.success(
                f"invest {p * .2} in fixed income(like government bonds,term deposit,fixed deposit,gold Sovereign bonds)")
            st.success(f"invest {p * .4} in mutual funds(comparatively less risk in NIFTY50)")
    with c2:
        st_lottie(lottie_coding_2, height=200, key="idea")
    with st.container():
        st.header("Always consider the below mentioned points before investing in asserts â¬‡â¬‡â¬‡")
        st.markdown(
            "<h5>âœ” Your financial goals: What do you want to achieve with your investments? If you have a long-term "
            "goal,"
            "such as saving for retirement, you may be able to afford to take on more risk and invest a higher "
            "percentage of your salary in stocks. On the other hand, if you have a shorter-term goal, such as saving "
            "for a down payment on a house, you may want to invest a smaller percentage of your salary in stocks and "
            "allocate more to lower-risk investments.",unsafe_allow_html=True)
        st.markdown(
            "<h5>âœ” Your risk tolerance: How comfortable are you with the possibility of losing money in your "
            "investments? "
            "If you are a more risk-averse investor, you may want to invest a smaller percentage of your salary in "
            "stocks. On the other hand, if you are willing to take on more risk in pursuit of higher returns, "
            "you may be comfortable investing a higher percentage of your salary in stocks.",unsafe_allow_html=True)
        st.markdown(
            "<h5>âœ” Your overall investment portfolio: What other investments do you have in your portfolio? A "
            "well-diversified portfolio should include a mix of different asset classes, such as stocks, bonds, "
            "and cash. The appropriate percentage of your salary to invest in stocks will depend on the overall "
            "balance of your portfolio.",unsafe_allow_html=True)
    st.write("\n")
    st.markdown("<center><h4>Basics of Investing</center>", unsafe_allow_html=True)
    st.write(
        "<center>Jargons getting irritating? Kick-start your learning by understanding the basics of stock market investing</center>",
        unsafe_allow_html=True)
    st.write("\n\n")
    st.write("\n\n")
    with st.container():
        col1, col2 = st.columns(2)
        with col1:
            st.markdown('''<div style="text-align:center;"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-1-circle" viewBox="0 0 16 16">
          <path d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8Zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0ZM9.283 4.002V12H7.971V5.338h-.065L6.072 6.656V5.385l1.899-1.383h1.312Z"/>
        </svg><center><h6>Elementary economics</h6></center>
                            <center>Decode the general state of an economy and drivers that lead to the economic growth of a 
                            country. Learn how GDP is calculated and how itâ€™s connected to economic growth. Understand 
                            inflation, stagflation and how they impact your investments</center>''',
                        unsafe_allow_html=True)
            st.caption(
                '''<center><a href="https://www.tickertape.in/learn/modules/economics-101/intro-to-macro-economics/">click here to know more information</a></center>''',
                unsafe_allow_html=True)
        with col2:
            st_lottie(lottie_coding_5, height=300, key="eco")
        st.write("****")
    with st.container():
        col1, col2 = st.columns(2)
        with col1:
            st_lottie(lottie_coding_6, height=300, key="market")
        with col2:
            st.markdown('''<div style="text-align:center;"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi 
                        bi-2-circle" viewBox="0 0 16 16"> <path d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8Zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 
                        0ZM6.646 6.24v.07H5.375v-.064c0-1.213.879-2.402 2.637-2.402 1.582 0 2.613.949 2.613 2.215 0 1.002-.6 
                        1.667-1.287 2.43l-.096.107-1.974 2.22v.077h3.498V12H5.422v-.832l2.97-3.293c.434-.475.903-1.008.903-1.705 
                        0-.744-.557-1.236-1.313-1.236-.843 0-1.336.615-1.336 1.306Z"/> </svg><center><h6>Equity 
                        markets</h6></center><center>A guided introduction to equity market participants, trading mechanisms, 
                        indices, financial & investment ratios and key metrics one should look at before investing. Also included is 
                        a primer to technical analysis for stocks</center>''', unsafe_allow_html=True)
            st.caption(
                '''<center><a href="https://www.tickertape.in/learn/modules/investing-in-stocks/equity-markets/">click here to know more information</a></center>''',
                unsafe_allow_html=True)
        st.write("****")
    with st.container():
        col1, col2 = st.columns(2)
        with col1:
            st.markdown('''<div style="text-align:center;"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi 
            bi-3-circle" viewBox="0 0 16 16"> <path d="M7.918 8.414h-.879V7.342h.838c.78 0 1.348-.522 1.342-1.237 
            0-.709-.563-1.195-1.348-1.195-.79 0-1.312.498-1.348 1.055H5.275c.036-1.137.95-2.115 2.625-2.121 1.594-.012 
            2.608.885 2.637 2.062.023 1.137-.885 1.776-1.482 1.875v.07c.703.07 1.71.64 1.734 1.917.024 1.459-1.277 
            2.396-2.93 2.396-1.705 0-2.707-.967-2.754-2.144H6.33c.059.597.68 1.06 1.541 1.066.973.006 1.6-.563 
            1.588-1.354-.006-.779-.621-1.318-1.541-1.318Z"/> <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0ZM1 8a7 7 0 1 0 
            14 0A7 7 0 0 0 1 8Z"/> </svg><center><h6>Investing in portfolios</h6></center><center>Read about the 
            importance of portfolio investing and benefits of diversification. Learn how to calculate a portfolio's 
            return, how to construct portfolios and how to benchmark and track the portfolio's performance</center>''',
                        unsafe_allow_html=True)
            st.caption(
                '''<center><a href="https://www.tickertape.in/learn/modules/portfolio-investing-explained/what-is-a-portfolio/">click here to know more information</a></center>''',
                unsafe_allow_html=True)
        with col2:
            #i3 = Image.open("C:/Users/Admin/Downloads/three.png")
            st.write('\t\t')
            #st.image(i3, width=250, use_column_width=250)
            st_lottie(lottie_coding_7, height=300, key="port")
        st.write("****")
    with st.container():
        col1, col2 = st.columns(2)
        with col2:
            st.markdown('''<div style="text-align:center;"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi 
            bi-4-circle" viewBox="0 0 16 16"> <path d="M7.519 
            5.057c.22-.352.439-.703.657-1.055h1.933v5.332h1.008v1.107H10.11V12H8.85v-1.559H4.978V9.322c.77-1.427 
            1.656-2.847 2.542-4.265ZM6.225 9.281v.053H8.85V5.063h-.065c-.867 1.33-1.787 2.806-2.56 4.218Z"/> <path d="M16 
            8A8 8 0 1 1 0 8a8 8 0 0 1 16 0ZM1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8Z"/> </svg><center><h6>Evaluating 
            stocks</h6>Detailed walkthrough of different filters, ratios, attributes and parameters to evaluate stocks. 
            Learn how to apply these filters inside screener and the rationale behind each filter, along with a guide on 
            creating custom filters</center>''', unsafe_allow_html=True)
            st.caption(
                '''<center><a href="https://www.tickertape.in/learn/modules/evaluating-stocks/screener/">click here to know more information</a></center>''',
                unsafe_allow_html=True)

        with col1:
            #i4 = Image.open("C:/Users/Admin/Downloads/four.jpg")
            #st.image(i4, width=250, use_column_width=250)
            st_lottie(lottie_coding_8, height=300, key="st")
        st.write("****")
if selected == "IND Stock tracking":
    st.subheader('NSE Stock tracking')
    nse = Nse()
    c1, c2 = st.columns(2)
    with c2:
        st.write("<h4>List of NSE stocks â¬‡â¬‡â¬‡",unsafe_allow_html=True)
        all_stock_codes = nse.get_stock_codes()
        f = pd.Series(all_stock_codes)
        st.write(f)
    with c1:
        st.write("\n\n\n")
        st_lottie(lottie_coding_4, height=300, key="nse")
    inp = st.text_input("enter the symbol to be tracked :").upper()
    amount = st.number_input("enter the total amount you initially invested for buying the stock :")
    no_of_stocks = st.slider("enter the number of stocks you bought: ")
    st.write("you choose", no_of_stocks)
    st.write("Click the below IND stock button to view the necessary information")
    ind = st.button('IND stocks')
    if ind:
        with st.spinner(text='In progress'):
            time.sleep(4)
        try:
            q = nse.get_quote(inp)
            v = pd.Series(q)
            st.success(f"close price of the day : {v['closePrice']}")
            st.success(f"date :{v['secDate']}")
            st.success(f"price change :{v['change']}")
            st.success(f"day low :{v['dayLow']}")
            st.success(f"day high :{v['dayHigh']}")
            profit_loss = float((v['closePrice'] - (amount / no_of_stocks)) * no_of_stocks)
            st.write("If you have a plan to sell the stock now, then check the value of your stock â¬‡â¬‡â¬‡")
            if profit_loss > 0:
                st.success(f"your profit will be :{profit_loss}")
            else:
                st.error(f"you are gonna loss {abs(profit_loss)}")
        except:
            st.error('Symbol you entered does not exist')
if selected == "US stocks tracking":

    st.write("Here there is list of info")
    sy = st.text_input("enter the ticker to be tracked ").upper()
    amount = st.number_input("enter the total amount you initially invested for buying the stock (in Dollar):")
    no_of_stocks = st.slider("enter the number of stocks you bought: ")
    c1, c2 = st.columns(2)
    with c2:
        st.write("Click the below US stock button to view the necessary information")
        us = st.button('US stocks')
        if us:
            with st.spinner(text='In progress'):
                time.sleep(4)
            try:
                url = "https://alpha-vantage.p.rapidapi.com/query"
                querystring = {"function": "GLOBAL_QUOTE", "symbol": sy}

                headers = {
                    "X-RapidAPI-Key": "a51c783d08msh82d02b76527c36ap147861jsn12f3f5caf3e4",
                    "X-RapidAPI-Host": "alpha-vantage.p.rapidapi.com"
                }
                response = requests.request("GET", url, headers=headers, params=querystring)
                rt = response.text
                p = pd.read_json(rt)
                st.write(p)
                pp = p["Global Quote"][1]
                cp = p["Global Quote"][7]
                hp = p["Global Quote"][2]
                lp = p["Global Quote"][3]
                pc = p["Global Quote"][8]
                st.success(f"open price of the day :{pp}")
                st.success(f"close price of the day :{cp}")
                st.success(f"Highest price of the day :{hp}")
                st.success(f"Lowest price of the day :{lp}")
                st.success(f"price change of the day :{pc}")
                st.write("If you have a plan to sell the stock now, then check the value of your stock â¬‡â¬‡â¬‡")
                profit_loss = float((float(cp) - (amount / no_of_stocks)) * no_of_stocks)
                if profit_loss > 0:
                    st.success(f"your profit will be :{profit_loss}")
                else:
                    st.error(f"you are gonna loss {abs(profit_loss)}")
                CSV_URL = 'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY_EXTENDED&symbol=' + sy + '&interval=15min&slice=year1month1&apikey=9B3RPQVRIOXMBDWP'
                with requests.Session() as s:
                    download = s.get(CSV_URL)
                    decoded_content = download.content.decode('utf-8')
                    cr = csv.reader(decoded_content.splitlines(), delimiter=',')
                    my_list = list(cr)
                    f = pd.DataFrame(my_list)
                    st.download_button("Download CSV(INTRADAY)",f.to_csv(),file_name=sy+' STOCKS DATA'+str(datetime.now())+'.csv', mime='text/csv')
                CSV_URL1 = 'https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY&symbol='+ sy +'&apikey=9B3RPQVRIOXMBDWP&datatype=csv'
                with requests.Session() as s:
                    download = s.get(CSV_URL1)
                    decoded_content = download.content.decode('utf-8')
                    cr = csv.reader(decoded_content.splitlines(), delimiter=',')
                    my_list = list(cr)
                    f = pd.DataFrame(my_list)
                    st.download_button("Download CSV(WEEKLY)", f.to_csv(),
                                       file_name=sy + ' STOCKS DATA' + str(datetime.now()) + '.csv', mime='text/csv')
                CSV_URL2 = 'https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol='+ sy +'&apikey=9B3RPQVRIOXMBDWP&datatype=csv'
                with requests.Session() as s:
                    download = s.get(CSV_URL2)
                    decoded_content = download.content.decode('utf-8')
                    cr = csv.reader(decoded_content.splitlines(), delimiter=',')
                    my_list = list(cr)
                    f = pd.DataFrame(my_list)
                    st.download_button("Download CSV(MONTHLY)", f.to_csv(),
                                       file_name=sy + ' STOCKS DATA' + str(datetime.now()) + '.csv', mime='text/csv')
            except:
                st.error("Symbol you entered does not exist")

    with c1:
        st.write("\n\n\n")
        st_lottie(lottie_coding_3, height=250, key="dollar")
        st.title('Stock Prediction')
        prediction = st.button('Predict')
        if prediction:
            # Fetch stock data from Alpha Vantage
            url = "https://www.alphavantage.co/query"
            params = {
                "function": "TIME_SERIES_DAILY_ADJUSTED",
                "symbol": sy,
                "apikey": "9B3RPQVRIOXMBDWP"
            }
            response = requests.get(url, params=params)
            data = response.json()

            # Preprocess and clean the data
            df = pd.DataFrame.from_dict(data['Time Series (Daily)'], orient='index')
            df = df.reset_index()
            df.columns = ['date', 'open', 'high', 'low', 'close', 'adj_close', 'volume','useless1','useless2']
            #st.write(df)
            df['date'] = pd.to_datetime(df['date'])
            df['open'] = pd.to_numeric(df['open'])
            df['high'] = pd.to_numeric(df['high'])
            df['low'] = pd.to_numeric(df['low'])
            df['close'] = pd.to_numeric(df['close'])
            df['volume'] = pd.to_numeric(df['volume'])
            df['adj_close'] = pd.to_numeric(df['adj_close'])
            df = df.sort_values('date')
            st.write(df)

            # Build the prediction model
            X = df[['open', 'high', 'low', 'volume']][0:70]
            y = df['close'][0:70]
            model = RandomForestRegressor()
            model.fit(X, y)
            # Make predictions and display the results
            prediction = model.predict(X[-70:])
            st.write(prediction)
            mae = mean_absolute_error(y,prediction)
            st.write("mean absolute error :" + str(mae))
            st.write(mae)
            st.write("<h3>The line chart shows the predicted close price of the stock",unsafe_allow_html=True)
            st.line_chart(prediction)
